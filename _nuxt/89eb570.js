(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{198:function(n,e,t){"use strict";t.r(e);var r={head:function(){return{link:[{rel:"stylesheet",href:"/css/termynal.css"}],script:[{src:"js/termynal.js","data-termynal-container":"#termynal"},{src:"js/index.js"}]}}},o=t(28),component=Object(o.a)(r,(function(){var n=this,e=n.$createElement;n._self._c;return n._m(0)}),[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"container"},[t("div",{attrs:{id:"termynal","data-termynal":""}},[t("span",{attrs:{"data-ty":"input","data-ty-prompt":">"}},[n._v("skriptdocsgenerator")]),n._v(" "),t("span",{attrs:{"data-ty":""}},[t("span",{staticClass:"text-green-500"},[n._v("\n        SkriptDocsGenerator\n        "),t("span",{staticClass:"text-yellow-500"},[n._v("Â»")]),n._v("\n        Documentation generated for SkDynmap")])])]),n._v(" "),t("div",{staticClass:"opacity-0 duration-300",attrs:{id:"output","data-termynal":""}},[t("pre",{staticClass:"overflow-scroll",staticStyle:{"max-height":"300px"}},[n._v('        {\n          "effects": [\n            {\n              "id": "EffClearRenders",\n              "name": "Clear renders",\n              "description": [\n                "Clear all areas and markers on the map"\n              ],\n              "patterns": [\n                "(wipe|clear) [sk]dynmap render[s]"\n              ],\n              "examples": [\n                "wipe skdynmap renders"\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "EffCreateArea",\n              "name": "Create area",\n              "description": [\n                "Create an area and show it on the map"\n              ],\n              "patterns": [\n                "create area [from] %areabuilder%"\n              ],\n              "examples": [\n                "command /createarea:\\n\\ttrigger:\\n\\t\\tcreate area from new area named \\"Hello World\\" with description \\"Hi !\\" at {pos-1} and {pos-2}\\n\\t\\tsend \\"Area created !\\""\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "EffCreateMarker",\n              "name": "Create marker",\n              "description": [\n                "Create a marker and show it on the map"\n              ],\n              "patterns": [\n                "create marker [from] %markerbuilder%"\n              ],\n              "examples": [\n                "command /createmarker:\\n\\ttrigger:\\n\\t\\tset {_builder} to new marker named \\"Marker\\" at {pos-1} with icon \\"house\\"\\n\\t\\tcreate marker {_builder}\\n\\t\\tsend \\"Marker created !\\""\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "EffDeleteArea",\n              "name": "Delete area",\n              "description": [\n                "Delete an existent area"\n              ],\n              "patterns": [\n                "delete area [from] %dynmaparea%"\n              ],\n              "examples": [\n                "command /deletearea <text>:\\n\\ttrigger:\\n\\t\\tdelete area from area with id arg-1\\n\\t\\tsend \\"Deleted !\\""\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "EffDeleteMarker",\n              "name": "Delete marker",\n              "description": [\n                "Delete an existent marker"\n              ],\n              "patterns": [\n                "delete marker [from] %dynmapmarker%"\n              ],\n              "examples": [\n                "command /deletemarker <text>:\\n\\ttrigger:\\n\\t\\tdelete marker from marker with id arg-1\\n\\t\\tsend \\"Deleted !\\""\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "EffMakeRender",\n              "name": "Make render",\n              "description": [\n                "Make the render of areas or markers or a global render"\n              ],\n              "patterns": [\n                "[make] render [of] %dynmapareas/dynmapmarkers%",\n                "[make] global render [of [sk]dynmap]"\n              ],\n              "examples": [\n                "command /renderall:\\n\\ttrigger:\\n\\t\\tmake global render of skdynmap"\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            }\n          ],\n          "expressions": [\n            {\n              "id": "ExprDefaultStyle",\n              "name": "Default style",\n              "description": [\n                "Returns the default style defined in the config."\n              ],\n              "patterns": [\n                "default [area] style"\n              ],\n              "examples": [\n                "set {_style} to default style"\n              ],\n              "since": [\n                "1.0-beta02"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprMarkerWithID",\n              "name": "Marker with id",\n              "description": [\n                "Get an marker from its id"\n              ],\n              "patterns": [\n                "[dynmap] marker with id %string%"\n              ],\n              "examples": [\n                "set {_marker} to marker with id \\"my_marker_id\\""\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprAllMarkers",\n              "name": "All markers",\n              "description": [\n                "Return a list with all created markers"\n              ],\n              "patterns": [\n                "all [dynmap] markers"\n              ],\n              "examples": [\n                "command /deleteall:\\n\\ttrigger:\\n\\t\\tloop all markers:\\n\\t\\t\\tdelete marker loop-value"\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprMarkerBuilder",\n              "name": "Marker builder",\n              "description": [\n                "The constructor for a future marker"\n              ],\n              "patterns": [\n                "new [dynmap] marker named %string% at %locations%",\n                "new [dynmap] marker named %string% at %locations% with [icon] %string%",\n                "new [dynmap] marker with id %string% named %string% at %locations%",\n                "new [dynmap] marker with id %string% named %string% at %locations% with [icon] %string%"\n              ],\n              "examples": [\n                "set {_builder} to new marker with id \\"custom_id\\" named \\"Landmark\\" at {pos-1}"\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprLastMarker",\n              "name": "The marker",\n              "description": [\n                "This expression returns the last generated marker using marker scope"\n              ],\n              "patterns": [\n                "[the] [last] [(generated|created)] marker"\n              ],\n              "examples": [\n                "command /makemarker:\\n\\ttrigger:\\n\\t\\tmake marker:\\n\\t\\t\\tset name of marker to \\"Landmark\\"\\n\\t\\t\\tset location of marker to {pos-2}\\n\\t\\t\\tset marker\'s icon to \\"house\\"\\n\\t\\tcreate marker from last generated marker"\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprLocations",\n              "name": "Locations of area",\n              "description": [\n                "Returns the locations of an area/areabuilder\\nIt can be get, and set."\n              ],\n              "patterns": [\n                "[all] [the] locations of %dynmaparea/areabuilder%",\n                "[all] [the] %dynmaparea/areabuilder%\'[s] locations"\n              ],\n              "examples": [\n                "set locations of {_area} to {pos-1} and {pos-2}"\n              ],\n              "since": [\n                "1.0.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprChunksToLocations",\n              "name": "Corners of chunks",\n              "description": [\n                "Get the locations from a list of chunks, to be used with locations of areas"\n              ],\n              "patterns": [\n                "corners of %chunks%"\n              ],\n              "examples": [\n                "command /makechunks:\\n\\ttrigger:\\n\\t\\tmake area:\\n\\t\\t\\tset id of area to \\"chunk_id\\"\\n\\t\\t\\tset name of area to \\"Chunks\\"\\n\\t\\t\\tset locations of area to corners of {chunk::*}\\n\\t\\tcreate area from last area\\n\\t\\tsend \\"Ok!\\""\n              ],\n              "since": [\n                "1.2"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprAreaWithID",\n              "name": "Area with id",\n              "description": [\n                "Get an area from its id"\n              ],\n              "patterns": [\n                "[dynmap] area with id %string%"\n              ],\n              "examples": [\n                "set {_area} to area with id \\"my_area_id\\""\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprAllAreas",\n              "name": "All areas",\n              "description": [\n                "Return a list with all created areas"\n              ],\n              "patterns": [\n                "all [dynmap] areas"\n              ],\n              "examples": [\n                "command /deleteall:\\n\\ttrigger:\\n\\t\\tloop all areas:\\n\\t\\t\\tdelete area loop-value"\n              ],\n              "since": [\n                "1.0.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprLastArea",\n              "name": "The area",\n              "description": [\n                "This expression returns the last generated area using area scope"\n              ],\n              "patterns": [\n                "[the] [last] [(generated|created)] area"\n              ],\n              "examples": [\n                "command /makearea:\\n\\ttrigger:\\n\\t\\tmake area:\\n\\t\\t\\tset name of area to \\"My Area\\"\\n\\t\\t\\tset description of area to \\"Using sections !\\"\\n\\t\\t\\tset locations of area to {pos-1} and {pos-2}\\n\\t\\t\\tset {_style} to default area style\\n\\t\\t\\tset line color of {_style} to \\"##00FF00\\"\\n\\t\\t\\tset fill color of {_style} to \\"##FFFF00\\"\\n\\t\\t\\tset style of area to {_style}\\n\\t\\tcreate area from last generated area\\n\\t\\tsend \\"Area created !\\""\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprAreaBuilder",\n              "name": "Area builder",\n              "description": [\n                "The constructor for a future area"\n              ],\n              "patterns": [\n                "new [dynmap] area named %string% at %locations%",\n                "new [dynmap] area named %string% at %locations% with [style] %areastyle%",\n                "new [dynmap] area named %string% with description %string% at %locations%",\n                "new [dynmap] area named %string% with description %string% at %locations% with [style] %areastyle%",\n                "new [dynmap] area with id %string% named %string% at %locations%",\n                "new [dynmap] area with id %string% named %string% at %locations% with [style] %areastyle%",\n                "new [dynmap] area with id %string% named %string% with description %string% at %locations%",\n                "new [dynmap] area with id %string% named %string% with description %string% at %locations% with [style] %areastyle%"\n              ],\n              "examples": [\n                "set {_builder} to new area with id \\"custom_id\\" named \\"Blabla\\" at ({pos-1}, {pos-2} and {pos-3}) with style {_style}"\n              ],\n              "since": [\n                "1.0.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprLineWeight",\n              "name": "Line weight",\n              "description": [\n                "Returns the line-weight property of the provided style."\n              ],\n              "patterns": [\n                "[the] line(-| )weight of %areastyle%",\n                "%areastyle%\'[s] line(-| )weight"\n              ],\n              "examples": [\n                "set {_lineweight} to line weight of {_style}"\n              ],\n              "since": [\n                "1.0-beta02"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprLineOpacity",\n              "name": "Line opacity",\n              "description": [\n                "Returns the line-opacity property of the provided style."\n              ],\n              "patterns": [\n                "[the] line(-| )opacity of %areastyle%",\n                "%areastyle%\'[s] line(-| )opacity"\n              ],\n              "examples": [\n                "set {_lineopacity} to line opacity of {_style}"\n              ],\n              "since": [\n                "1.0-beta02"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprLineColor",\n              "name": "Line color",\n              "description": [\n                "Returns the line-color property of the provided style."\n              ],\n              "patterns": [\n                "[the] line(-| )color of %areastyle%",\n                "%areastyle%\'[s] line(-| )color"\n              ],\n              "examples": [\n                "set {_linecolor} to line-color of {_style}"\n              ],\n              "since": [\n                "1.0-beta02"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprFillOpacity",\n              "name": "Fill opacity",\n              "description": [\n                "Returns the fill-opacity property of the provided style."\n              ],\n              "patterns": [\n                "[the] fill(-| )opacity of %areastyle%",\n                "%areastyle%\'[s] fill(-| )opacity"\n              ],\n              "examples": [\n                "set {_fillopacity} to fill opacity of {_style}"\n              ],\n              "since": [\n                "1.0-beta02"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprFillColor",\n              "name": "Fill color",\n              "description": [\n                "Returns the fill-color property of the provided style."\n              ],\n              "patterns": [\n                "[the] fill(-| )color of %areastyle%",\n                "%areastyle%\'[s] fill(-| )color"\n              ],\n              "examples": [\n                "set {_fillcolor} to fill color of {_style}"\n              ],\n              "since": [\n                "1.0-beta02"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprVisibility",\n              "name": "Visibility of player",\n              "description": [\n                "Get the visibility of a player on the map.\\nIt can be set or reset."\n              ],\n              "patterns": [\n                "[the] visibility of %player%",\n                "%player%\'[s] visibility"\n              ],\n              "examples": [\n                "command /show:\\n\\ttrigger:\\n\\t\\tset player\'s visibility to true\\n\\t\\tsend \\"You are now visible on the map!\\""\n              ],\n              "since": [\n                "1.2"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprLocation",\n              "name": "Location of marker",\n              "description": [\n                "Returns the location of a marker/markerbuilder\\nIt can be get, or set."\n              ],\n              "patterns": [\n                "[the] location of %dynmapmarker/markerbuilder%",\n                "%dynmapmarker/markerbuilder%\'[s] location"\n              ],\n              "examples": [\n                "set location of {_marker} to {pos-1}"\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprIcon",\n              "name": "Icon of marker",\n              "description": [\n                "Returns the icon of a marker/markerbuilder\\nIt can be get, set or reset.\\nThere is a list of all default dynmap icons: https://github.com/webbukkit/dynmap/wiki/Using-markers#marker-icons"\n              ],\n              "patterns": [\n                "[the] icon of %dynmapmarker/markerbuilder%",\n                "%dynmapmarker/markerbuilder%\'[s] icon"\n              ],\n              "examples": [\n                "set icon of {_marker} to \\"house\\""\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprName",\n              "name": "Name of Area/Marker",\n              "description": [\n                "Returns the name of a area/areabuilder/marker/markerbuilder\\nIt can be get, or set"\n              ],\n              "patterns": [\n                "[the] name of %dynmaparea/areabuilder/dynmapmarker/markerbuilder%",\n                "%dynmaparea/areabuilder/dynmapmarker/markerbuilder%\'[s] name"\n              ],\n              "examples": [\n                "set name of {_area} to \\"New Name\\""\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprId",\n              "name": "Id of Area/Marker",\n              "description": [\n                "Returns the id of a area/areabuilder/marker/markerbuilder\\nIt can be get, or set"\n              ],\n              "patterns": [\n                "[the] id of %dynmaparea/areabuilder/dynmapmarker/markerbuilder%",\n                "%dynmaparea/areabuilder/dynmapmarker/markerbuilder%\'[s] id"\n              ],\n              "examples": [\n                "set id of {_area} to \\"new_id\\""\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprStyle",\n              "name": "Style of area",\n              "description": [\n                "Returns the style of an area/areabuilder\\nIt can be get, set or reset."\n              ],\n              "patterns": [\n                "[the] [area]style of %dynmaparea/areabuilder%",\n                "%dynmaparea/areabuilder%\'[s] [area]style"\n              ],\n              "examples": [\n                "reset style of {_area}"\n              ],\n              "since": [\n                "1.0.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ExprDescription",\n              "name": "Description of area",\n              "description": [\n                "Returns the description of an area/areabuilder\\nIt can be get, set, reset or removed."\n              ],\n              "patterns": [\n                "[the] description of %dynmaparea/areabuilder%",\n                "%dynmaparea/areabuilder%\'[s] description"\n              ],\n              "examples": [\n                "set description of {_area} to \\"Hello World\\" !"\n              ],\n              "since": [\n                "1.0.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            }\n          ],\n          "conditions": [\n            {\n              "id": "CondIsPlayerVisible",\n              "name": "Is player visible",\n              "description": [\n                "Check if a player is visible on the map"\n              ],\n              "patterns": [\n                "%player% is visible",\n                "%player% isn\'t visible"\n              ],\n              "examples": [\n                "command /isvisible <player>:\\n\\ttrigger:\\n\\t\\tif arg-1 is visible:\\n\\t\\t\\tsend \\"yes\\"\\n\\t\\telse:\\n\\t\\t\\tsend \\"no\\""\n              ],\n              "since": [\n                "1.2"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ScopeMakeArea",\n              "name": "Make Area",\n              "description": [\n                "This is a scope that allows you to create areas easily"\n              ],\n              "patterns": [\n                "make [new] [dynmap] area"\n              ],\n              "examples": [\n                "command /make:\\n\\ttrigger:\\n\\t\\tmake area:\\n\\t\\t\\tset name of area to \\"My Area\\"\\n\\t\\t\\tset description of area to \\"Using sections !\\"\\n\\t\\t\\tset locations of area to {pos-1} and {pos-2}\\n\\t\\t\\tset {_style} to default area style\\n\\t\\t\\tset line color of {_style} to \\"##00FF00\\"\\n\\t\\t\\tset fill color of {_style} to \\"##FFFF00\\"\\n\\t\\t\\tset style of area to {_style}\\n\\t\\tcreate area from last generated area"\n              ],\n              "since": [\n                "1.0.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            },\n            {\n              "id": "ScopeMakeMarker",\n              "name": "Make Marker",\n              "description": [\n                "This is a scope that allows you to create markers easily"\n              ],\n              "patterns": [\n                "make [new] [dynmap] marker"\n              ],\n              "examples": [\n                "command /make:\\n\\ttrigger:\\n\\t\\tmake marker:\\n\\t\\t\\tset name of marker to \\"Landmark\\"\\n\\t\\t\\tset location of marker to {pos-2}\\n\\t\\t\\tset marker\'s icon to \\"house\\"\\n\\t\\tcreate marker from last generated marker"\n              ],\n              "since": [\n                "1.1"\n              ],\n              "requiredPlugins": [\n                "dynmap"\n              ]\n            }\n          ],\n          "events": [\n            {\n              "id": "EventRender",\n              "name": "On SkDynmap render",\n              "patterns": [\n                "[[sk]dynmap] [map] render"\n              ],\n              "since": [\n                "1.2"\n              ]\n            }\n          ],\n          "types": [\n            {\n              "id": "dynmaparea",\n              "name": "SkDynmap DynmapArea",\n              "description": [\n                "SkDynmap\'s DynmapArea object"\n              ],\n              "patterns": [\n                "dynmaparea"\n              ],\n              "since": [\n                "1.0-beta02"\n              ]\n            },\n            {\n              "id": "areastyle",\n              "name": "SkDynmap AreaStyle",\n              "description": [\n                "SkDynmap\'s AreaStyle object"\n              ],\n              "patterns": [\n                "areastyle"\n              ],\n              "since": [\n                "1.0-beta02"\n              ]\n            },\n            {\n              "id": "areabuilder",\n              "name": "SkDynmap AreaBuilder",\n              "description": [\n                "SkDynmap\'s AreaBuilder object"\n              ],\n              "patterns": [\n                "areabuilder"\n              ],\n              "since": [\n                "1.0.1"\n              ]\n            },\n            {\n              "id": "markerbuilder",\n              "name": "SkDynmap MarkerBuilder",\n              "description": [\n                "SkDynmap\'s MarkerBuilder object"\n              ],\n              "patterns": [\n                "markerbuilder"\n              ],\n              "since": [\n                "1.1"\n              ]\n            },\n            {\n              "id": "dynmapmarker",\n              "name": "SkDynmap DynmapMarker",\n              "description": [\n                "SkDynmap\'s DynmapMarker object"\n              ],\n              "patterns": [\n                "dynmapmarker"\n              ],\n              "since": [\n                "1.1"\n              ]\n            }\n          ]\n        }\n      ')])])])}],!1,null,null,null);e.default=component.exports}}]);